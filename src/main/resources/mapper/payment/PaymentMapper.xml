<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjhotelback.mapper.payment.PaymentMapper">
	
	<!-- 24.11.22 지은 [완료] : 전체 결제 내역 목록 조회 -->
	<select id="getPaymentsList" resultType="com.hjhotelback.dto.payment.PaymentListDTO">
		SELECT 
			p.payment_id, 
			p.reservation_id, 
			rs.member_id,
			m.name member_name,
			p.payment_method, 
			p.payment_status,
			p.amount, 
			p.created_at,
			p.updated_at
		FROM payment p
		JOIN reservation rs ON p.reservation_id = rs.reservation_id
		JOIN member m ON m.member_id = rs.member_id;
	</select>
	
	<!-- 24.11.22 지은 [완료] : 결제 내역 - 특정 결제 내역 상세 조회 -->
	<resultMap id="paymentProcessLogsResultMap" type="com.hjhotelback.dto.payment.PaymentProcessLogDTO">
		<result property="createdAt" column="process_created_at" />
		<result property="status" column="process_status"/>
	</resultMap>
	<resultMap id="paymentDetailResultMap" type="com.hjhotelback.dto.payment.PaymentDetailDTO">
		<id property="paymentId" column="payment_id" />
		<result property="processId" column="process_id"/>
		<result property="reservationId" column="reservation_id"/>
		<result property="memberName" column="member_name"/>
		<result property="paymentMethod" column="payment_method"/>
		<result property="paymentStatus" column="payment_status"/>
		<result property="amount" column="amount"/>
		<result property="transactionId" column="transaction_id"/>
		<result property="paymentDate" column="payment_date"/>
		<result property="paymentUpdate" column="payment_update"/>
		<collection property="paymentProcessLogs" ofType="com.hjhotelback.dto.payment.PaymentProcessLogDTO" resultMap="paymentProcessLogsResultMap"/>
	</resultMap>
	<select id="getPaymentById" resultMap="paymentDetailResultMap">
	    SELECT 
		    p.payment_id,
		    pp.process_id,
		    p.reservation_id, 
		    m.name AS member_name, 
		    p.payment_method, 
		    p.payment_status,
		    p.amount,
		    p.transaction_id, 
		    p.created_at AS payment_date,
		    p.updated_at AS payment_update,
		    pp.created_at AS process_created_at,
		    pp.status AS process_status
		FROM payment p
		JOIN reservation rs ON p.reservation_id = rs.reservation_id
		LEFT JOIN payment_process pp ON p.reservation_id = pp.reservation_id
		JOIN member m ON m.member_id = rs.member_id
		WHERE p.payment_id = #{paymentId}
		ORDER BY pp.created_at ASC;
	</select>
	
	<!-- 24.11.21 지은 [완료] : 결제 내역 - 결제 내역 등록 -->
	<insert id="createPayment" useGeneratedKeys="true" keyProperty="paymentId" parameterType="com.hjhotelback.dto.payment.PaymentDTO">
		INSERT INTO payment (
	        reservation_id,
	        amount,
	        payment_method,
	        payment_status,
	        transaction_id,
	        created_at,
	        updated_at
	    )
	    VALUES (
	        #{reservationId},
	        #{amount},
	        #{paymentMethod},
	        #{paymentStatus},
	        #{transactionId},
	        NOW(),
	        NOW()
	    )
	</insert>
	
	<!-- 24.11.22 지은 [완료] : 결제 내역 - 특정 결제 내역 삭제 -->
	<delete id="deletePayment" parameterType="com.hjhotelback.dto.payment.PaymentDTO">
		DELETE FROM payment 
		WHERE payment_id = #{paymentId};
	</delete>
	
	<!-- 24.11.22 지은 [작업 중] : 결제 내역 - 특정 결제 내역 상태 변경 -->
	<update id="updatePaymentStatus" parameterType="map">
		UPDATE payment 
		SET payment_status = #{paymentStatus}
		WHERE payment_id = #{paymentId};
	</update>
</mapper>