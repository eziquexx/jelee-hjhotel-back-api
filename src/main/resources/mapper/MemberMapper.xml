<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hjhotelback.mapper.member.auth.MemberMapper">

    <!-- Insert Member -->
    <insert id="insertMember" parameterType="com.hjhotelback.entity.MemberEntity" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO member (user_id, email, password, name, phone, status, is_active, role, created_at)
        VALUES (#{userId}, #{email}, #{password}, #{name}, #{phone}, 'ACTIVE', 1, 'USER', CURRENT_TIMESTAMP)
    </insert>



    <!-- Insert Member Auth -->
    <insert id="insertMemberAuth" parameterType="com.hjhotelback.entity.MemberAuthEntity">
        INSERT INTO member_auth (member_id, auth) values (#{memberId}, #{auth})
    </insert>

    <!-- Find Member Auth -->
    <select id="findMemberAuth" parameterType="int" resultType="com.hjhotelback.entity.MemberAuthEntity">
        SELECT * FROM member_auth WHERE member_id = #{memberId}
    </select>

    <!-- Find Member By Member ID -->
    <select id="findMemberByMemberId" parameterType="int" resultType="com.hjhotelback.entity.MemberEntity">
        SELECT * FROM member WHERE member_id = #{memberId}
    </select>

    <!-- Find Member By User ID -->
    <select id="findMemberByUserId" parameterType="string" resultType="com.hjhotelback.entity.MemberEntity">
        SELECT * FROM member WHERE user_id = #{userId}
    </select>


    <!-- 회원 상태 변경 -->
    <update id="updateMemberStatus">
        UPDATE member
        SET status = #{newStatus}
        WHERE member_id = #{memberId}
    </update>

    <!-- 회원 삭제 -->
    <delete id="deleteMember">
        DELETE FROM member
        WHERE member_id = #{memberId}
    </delete>




    <select id="findMembers" resultType="com.hjhotelback.dto.member.auth.MemberDTO">
        SELECT
            member_id AS memberId,
            user_id AS userId,
            email,
            name,
            phone,
            status,
            is_active AS isActive,
            role,
            created_at AS createdAt,
            updated_at AS updatedAt
        FROM member
        ORDER BY member_id DESC -- 정렬 기준 수정
            LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countMembers" resultType="int">
        SELECT COUNT(*)
        FROM member
    </select>
</mapper>
